#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include "DHT.h"

#define DHTTYPE DHT11   

#define MQ2pin D4

int sensorValue;  

const char* ssid = "MyPiAP";
const char* password = "raspberry";

const char* MQTT_username = ""; 
const char* MQTT_password = ""; 

const char* mqtt_server = "192.168.5.1";

WiFiClient espClient;
PubSubClient client(espClient);

const int DHTPin = D7;

const int lamp = D1;
const int lamp2 = D2;
const int lamp3 = D5;
const int lamp4 = D6;


DHT dht(DHTPin, DHTTYPE);

long now = millis();
long lastMeasure = 0;

void setup_wifi() {
  delay(10);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("WiFi connected - ESP IP address: ");
  Serial.println(WiFi.localIP());
}


void callback(String topic, byte* message, unsigned int length) {
  Serial.print("Message arrived on topic: ");
  Serial.print(topic);
  Serial.print(". Message: ");
  String messageTemp;
  
  for (int i = 0; i < length; i++) {
    Serial.print((char)message[i]);
    messageTemp += (char)message[i];
  }
  Serial.println();


  if(topic=="room/lamp"){
      Serial.print("Changing Room lamp to ");
      if(messageTemp == "on"){
        digitalWrite(lamp, LOW);
        Serial.print("On");
      }
      else if(messageTemp == "off"){
        digitalWrite(lamp, HIGH);
        Serial.print("Off");
      }
  }

  if(topic=="room/lamp2"){
      Serial.print("Changing Room lamp to ");
      if(messageTemp == "on"){
        digitalWrite(lamp2, LOW);
        Serial.print("On");
      }
      else if(messageTemp == "off"){
        digitalWrite(lamp2, HIGH);
        Serial.print("Off");
      }
  }

    if(topic=="room/lamp3"){
      Serial.print("Changing Room lamp to ");
      if(messageTemp == "on"){
        digitalWrite(lamp3, LOW);
        Serial.print("On");
      }
      else if(messageTemp == "off"){
        digitalWrite(lamp3, HIGH);
        Serial.print("Off");
      }
  
  if(topic=="room/lamp4"){
      Serial.print("Changing Room lamp to ");
      if(messageTemp == "on"){
        digitalWrite(lamp4, LOW);
        Serial.print("On");
      }
      else if(messageTemp == "off"){
        digitalWrite(lamp4, HIGH);
        Serial.print("Off");
      }
  }
  
  }
  Serial.println();
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    if (client.connect("ESP8266Client", MQTT_username, MQTT_password)) {
      Serial.println("connected");  
      client.subscribe("room/lamp");
      client.subscribe("room/lamp2");
      client.subscribe("room/lamp3");
      client.subscribe("room/lamp4");
      
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

 
void setup() {
  pinMode(lamp, OUTPUT);
  pinMode(lamp2, OUTPUT);
  pinMode(lamp3, OUTPUT);
  pinMode(lamp4, OUTPUT);
  digitalWrite(lamp, LOW);
  digitalWrite(lamp2, LOW);
  digitalWrite(lamp3, LOW);
  digitalWrite(lamp4, LOW);

  
  dht.begin();
  
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);

}

void loop() {

  if (!client.connected()) {
    reconnect();
  }
  if(!client.loop())
    client.connect("ESP8266Client", MQTT_username, MQTT_password);

  now = millis();
  if (now - lastMeasure > 3000) {
    lastMeasure = now;
    float humidity = dht.readHumidity();
    float temperatureC = dht.readTemperature();
    float temperatureF = dht.readTemperature(true);

    if (isnan(humidity) || isnan(temperatureC) || isnan(temperatureF)) {
      Serial.println("Failed to read from DHT sensor!");
      return;
    }

    sensorValue = digitalRead(MQ2pin);

    client.publish("room/suhu", String(temperatureC).c_str());
    client.publish("room/lembab", String(humidity).c_str());
    client.publish("room/gas", String(sensorValue).c_str());
    
    Serial.print("Humidity: ");
    Serial.print(humidity);
    Serial.println(" %");
    Serial.print("Temperature: ");
    Serial.print(temperatureC);
    Serial.println(" ºC");
    Serial.print(temperatureF);
    Serial.println(" ºF");
  }
} 
